// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`the Onboarding component should render Onboarding 1`] = `
Array [
  <View
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {},
      ]
    }
  />,
  <BVLinearGradient
    colors={
      Array [
        4294967295,
        4294506484,
      ]
    }
    endPoint={
      Object {
        "x": 0.5,
        "y": 1,
      }
    }
    locations={null}
    startPoint={
      Object {
        "x": 0.5,
        "y": 0,
      }
    }
    style={
      Object {
        "flex": 1,
        "height": "100%",
        "position": "absolute",
        "width": "100%",
      }
    }
  />,
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
          "position": "relative",
        },
        undefined,
      ]
    }
  >
    <RCTScrollView
      activeDot={
        <ForwardRef(SafeAreaView)>
          <mapProps(getContext(mapProps(withPropsOnChange(mapProps(View))))) />
        </ForwardRef(SafeAreaView)>
      }
      automaticallyAdjustContentInsets={false}
      autoplay={false}
      autoplayDirection={true}
      autoplayTimeout={2.5}
      bounces={false}
      contentContainerStyle={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      contentOffset={
        Object {
          "x": 0,
        }
      }
      disableNextButton={false}
      disablePrevButton={false}
      dot={
        <ForwardRef(SafeAreaView)>
          <mapProps(getContext(mapProps(withPropsOnChange(mapProps(View))))) />
        </ForwardRef(SafeAreaView)>
      }
      horizontal={true}
      index={0}
      loadMinimal={true}
      loadMinimalSize={1}
      loop={false}
      onComplete={[Function]}
      onIndexChanged={[Function]}
      onMomentumScrollEnd={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      pagingEnabled={true}
      removeClippedSubviews={true}
      scrollsToTop={false}
      showsButtons={false}
      showsHorizontalScrollIndicator={false}
      showsPagination={true}
      showsVerticalScrollIndicator={false}
      userVersion={0}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "height": 1334,
                "width": 750,
              },
              Object {
                "backgroundColor": "transparent",
              },
            ]
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "minHeight": "100%",
              }
            }
            overScrollMode="auto"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "height": "40%",
                  }
                }
              >
                <Image
                  source={
                    Object {
                      "testUri": "../../../src/ui/Onboarding/img/personalize.jpg",
                    }
                  }
                  style={
                    Object {
                      "height": "100%",
                      "width": "100%",
                    }
                  }
                />
              </View>
              <RCTSafeAreaView
                emulateUnlessSupported={true}
                style={
                  Object {
                    "marginBottom": 48,
                    "paddingHorizontal": 16,
                    "paddingTop": 16,
                  }
                }
              >
                <View>
                  <View
                    style={
                      Object {
                        "paddingBottom": 8,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#00676D",
                          "fontFamily": "InterUI-Black",
                          "fontSize": 36,
                          "lineHeight": 41.4,
                        }
                      }
                    >
                      Hey friend!
                    </Text>
                  </View>
                  <Text
                    style={
                      Object {
                        "color": "#505050",
                        "fontFamily": "InterUI-Medium",
                        "fontSize": 14,
                        "lineHeight": 21,
                      }
                    }
                  >
                    We'd like to help personalize your mobile experience so we can help you with every step on your journey.
                  </Text>
                </View>
              </RCTSafeAreaView>
            </View>
          </RCTScrollView>
          <View
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "flexDirection": "row-reverse",
                "justifyContent": "space-between",
                "left": 0,
                "marginVertical": 8,
                "paddingHorizontal": 16,
                "paddingVertical": 0,
                "position": "absolute",
                "right": 0,
              }
            }
            vertical={false}
          >
            <RCTSafeAreaView
              edges={
                Array [
                  "bottom",
                ]
              }
              emulateUnlessSupported={true}
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  bordered={false}
                  disabled={false}
                  pill={true}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#00676D",
                      "borderColor": "#00676D",
                      "borderRadius": 48,
                      "borderWidth": 2,
                      "elevation": 2,
                      "flexDirection": "row",
                      "height": 48,
                      "justifyContent": "center",
                      "opacity": 1,
                      "overflow": "hidden",
                      "paddingHorizontal": 16,
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "#FFFFFF",
                        "fontFamily": "InterUI-Medium",
                        "fontSize": 14,
                        "lineHeight": 21,
                      }
                    }
                  >
                    Next
                  </Text>
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={20}
                    bbWidth={20}
                    focusable={false}
                    height={20}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "marginLeft": 8,
                          "marginRight": -8,
                        },
                        Object {
                          "opacity": 1,
                        },
                        Object {
                          "flex": 0,
                          "height": 20,
                          "width": 20,
                        },
                      ]
                    }
                    vbHeight={24}
                    vbWidth={24}
                    width={20}
                  >
                    <RNSVGGroup
                      fill={
                        Array [
                          0,
                          4278190080,
                        ]
                      }
                      fillOpacity={1}
                      fillRule={1}
                      font={Object {}}
                      matrix={
                        Array [
                          1,
                          0,
                          0,
                          1,
                          0,
                          0,
                        ]
                      }
                      opacity={1}
                      originX={0}
                      originY={0}
                      propList={Array []}
                      rotation={0}
                      scaleX={1}
                      scaleY={1}
                      skewX={0}
                      skewY={0}
                      stroke={null}
                      strokeDasharray={null}
                      strokeDashoffset={null}
                      strokeLinecap={0}
                      strokeLinejoin={0}
                      strokeMiterlimit={4}
                      strokeOpacity={1}
                      strokeWidth={1}
                      vectorEffect={0}
                      x={0}
                      y={0}
                    >
                      <RNSVGPath
                        d="M9.65 21L8 20.1l7.72-8.1L8 3.9 9.65 3l8.16 8.54c.27.28.27.64 0 .92L9.67 21z"
                        fill={
                          Array [
                            0,
                            4294967295,
                          ]
                        }
                        fillOpacity={1}
                        fillRule={1}
                        matrix={
                          Array [
                            1,
                            0,
                            0,
                            1,
                            0,
                            0,
                          ]
                        }
                        opacity={1}
                        originX={0}
                        originY={0}
                        propList={
                          Array [
                            "fill",
                          ]
                        }
                        rotation={0}
                        scaleX={1}
                        scaleY={1}
                        skewX={0}
                        skewY={0}
                        stroke={null}
                        strokeDasharray={null}
                        strokeDashoffset={null}
                        strokeLinecap={0}
                        strokeLinejoin={0}
                        strokeMiterlimit={4}
                        strokeOpacity={1}
                        strokeWidth={1}
                        vectorEffect={0}
                        x={0}
                        y={0}
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </RCTSafeAreaView>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "height": 1334,
                "width": 750,
              },
              Object {
                "backgroundColor": "transparent",
              },
            ]
          }
        >
          <RCTScrollView
            Component={
              Object {
                "$$typeof": Symbol(react.memo),
                "compare": null,
                "defaultProps": Object {
                  "buttonText": "Yes, find my local campus",
                  "description": "We'll use your location to connect you with your nearby campus and community",
                  "slideTitle": "Let's select your local campus",
                },
                "displayName": "LocationFinder",
                "propTypes": Object {
                  "BackgroundComponent": [Function],
                  "buttonText": [Function],
                  "campus": [Function],
                  "description": [Function],
                  "onPressButton": [Function],
                  "onPressPrimary": [Function],
                  "slideTitle": [Function],
                },
                "type": [Function],
              }
            }
            contentContainerStyle={
              Object {
                "minHeight": "100%",
              }
            }
            onNavigate={[Function]}
            overScrollMode="auto"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "height": "40%",
                  }
                }
              >
                <Image
                  source={
                    Object {
                      "testUri": "../../../src/ui/Onboarding/img/locations.jpg",
                    }
                  }
                  style={
                    Object {
                      "height": "100%",
                      "width": "100%",
                    }
                  }
                />
              </View>
              <RCTSafeAreaView
                emulateUnlessSupported={true}
                style={
                  Object {
                    "flex": 1,
                    "justifyContent": "space-between",
                    "marginBottom": 48,
                    "paddingHorizontal": 16,
                    "paddingTop": 16,
                  }
                }
              >
                <View>
                  <View
                    style={
                      Object {
                        "paddingBottom": 8,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "#00676D",
                          "fontFamily": "InterUI-Black",
                          "fontSize": 36,
                          "lineHeight": 41.4,
                        }
                      }
                    >
                      Let's select your local campus
                    </Text>
                  </View>
                  <Text
                    style={
                      Object {
                        "color": "#505050",
                        "fontFamily": "InterUI-Medium",
                        "fontSize": 14,
                        "lineHeight": 21,
                      }
                    }
                  >
                    We'll use your location to connect you with your nearby campus and community
                  </Text>
                </View>
                <View
                  horizontal={false}
                  style={
                    Object {
                      "paddingHorizontal": 0,
                      "paddingVertical": 16,
                    }
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      bordered={false}
                      disabled={false}
                      pill={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#00676D",
                          "borderColor": "#00676D",
                          "borderRadius": 16,
                          "borderWidth": 2,
                          "elevation": 2,
                          "flexDirection": "row",
                          "height": 48,
                          "justifyContent": "center",
                          "opacity": 1,
                          "overflow": "hidden",
                          "paddingHorizontal": 16,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#FFFFFF",
                            "fontFamily": "InterUI-Bold",
                            "fontSize": 16,
                            "lineHeight": 24,
                          }
                        }
                      >
                        Yes, find my local campus
                      </Text>
                    </View>
                  </View>
                </View>
              </RCTSafeAreaView>
            </View>
          </RCTScrollView>
          <View
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "flexDirection": "row-reverse",
                "justifyContent": "space-between",
                "left": 0,
                "marginVertical": 8,
                "paddingHorizontal": 16,
                "paddingVertical": 0,
                "position": "absolute",
                "right": 0,
              }
            }
            vertical={false}
          >
            <RCTSafeAreaView
              edges={
                Array [
                  "bottom",
                ]
              }
              emulateUnlessSupported={true}
            >
              <Text
                onPress={[Function]}
                style={
                  Object {
                    "color": "#A5A5A5",
                    "marginLeft": -16,
                    "paddingHorizontal": 16,
                    "paddingVertical": 15,
                  }
                }
                trackEventName="Ask Location Skipped"
              >
                Skip
              </Text>
            </RCTSafeAreaView>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "height": 1334,
              "justifyContent": "center",
              "width": 750,
            }
          }
        >
          <ActivityIndicator
            animating={true}
            color="#999999"
            hidesWhenStopped={true}
            size="small"
          />
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "height": 1334,
              "justifyContent": "center",
              "width": 750,
            }
          }
        >
          <ActivityIndicator
            animating={true}
            color="#999999"
            hidesWhenStopped={true}
            size="small"
          />
        </View>
      </View>
    </RCTScrollView>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "bottom": 25,
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
          },
          undefined,
        ]
      }
    >
      <RCTSafeAreaView
        emulateUnlessSupported={true}
      >
        <View
          style={
            Object {
              "backgroundColor": "#00676D",
              "borderRadius": 4,
              "height": 8,
              "margin": 4,
              "width": 8,
            }
          }
        />
      </RCTSafeAreaView>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
      >
        <View
          style={
            Object {
              "backgroundColor": "#A5A5A5",
              "borderRadius": 4,
              "height": 8,
              "margin": 4,
              "width": 8,
            }
          }
        />
      </RCTSafeAreaView>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
      >
        <View
          style={
            Object {
              "backgroundColor": "#A5A5A5",
              "borderRadius": 4,
              "height": 8,
              "margin": 4,
              "width": 8,
            }
          }
        />
      </RCTSafeAreaView>
      <RCTSafeAreaView
        emulateUnlessSupported={true}
      >
        <View
          style={
            Object {
              "backgroundColor": "#A5A5A5",
              "borderRadius": 4,
              "height": 8,
              "margin": 4,
              "width": 8,
            }
          }
        />
      </RCTSafeAreaView>
    </View>
  </View>,
]
`;
