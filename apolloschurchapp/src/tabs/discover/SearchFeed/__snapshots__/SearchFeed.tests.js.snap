// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The SearchFeed component should render 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={false}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    style={
      Object {
        "backgroundColor": "#eee",
        "flex": 1,
        "flexDirection": "column-reverse",
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="auto"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "paddingTop": 64,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          style={
            Object {
              "backgroundColor": "#fff",
              "flex": 1,
            }
          }
        >
          <RCTScrollView
            ListEmptyComponent={[Function]}
            contentContainerStyle={Object {}}
            data={
              Array [
                Object {
                  "__typename": "SearchResult",
                  "coverImage": Object {
                    "__typename": "ImageMedia",
                    "name": null,
                    "sources": Array [
                      Object {
                        "__typename": "ImageMediaSource",
                        "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f",
                      },
                    ],
                  },
                  "cursor": "b487224762b030f470967f45d7205823",
                  "node": Object {
                    "__typename": "DevotionalContentItem",
                    "id": "DevotionalContentItem:561dfb7dbd8a5c093fd8385c7edaadbc",
                  },
                  "summary": "Love compels a mother to lose all dignity in public as she screams the name of her lost child.",
                  "title": "How to lead people to Jesus",
                },
                Object {
                  "__typename": "SearchResult",
                  "coverImage": null,
                  "cursor": "4affc1122ad80d4edcf6c5bc9d88ae99",
                  "node": Object {
                    "__typename": "UniversalContentItem",
                    "id": "UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae",
                  },
                  "summary": "Get in the Groove
Celebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
                  "title": "Live for Freedom Toolkit",
                },
                Object {
                  "__typename": "SearchResult",
                  "coverImage": Object {
                    "__typename": "ImageMedia",
                    "name": null,
                    "sources": Array [
                      Object {
                        "__typename": "ImageMediaSource",
                        "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Db08e4d69-0acf-40ff-920a-4517de086175",
                      },
                    ],
                  },
                  "cursor": "659a26257a49fb2bf1446bb747bf7dd3",
                  "node": Object {
                    "__typename": "UniversalContentItem",
                    "id": "UniversalContentItem:895738f70482712adb3ab45a08c30456",
                  },
                  "summary": "Daughter: “Mom, can I bring some friends from college over for dinner Sunday?",
                  "title": "Should your 20-something live at home?",
                },
                Object {
                  "__typename": "SearchResult",
                  "coverImage": Object {
                    "__typename": "ImageMedia",
                    "name": null,
                    "sources": Array [
                      Object {
                        "__typename": "ImageMediaSource",
                        "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346",
                      },
                    ],
                  },
                  "cursor": "c8d2fe738629909c33010432432f21c8",
                  "node": Object {
                    "__typename": "UniversalContentItem",
                    "id": "UniversalContentItem:296373ecb53580855cadffa0375ebe18",
                  },
                  "summary": "A time to connect with other guys who live nearby.",
                  "title": "Guys Night!",
                },
                Object {
                  "__typename": "SearchResult",
                  "coverImage": null,
                  "cursor": "ba47485fbc61945a38a4147fe7ff3703",
                  "node": Object {
                    "__typename": "UniversalContentItem",
                    "id": "UniversalContentItem:c495ff18cd998ed516a798b6218907cd",
                  },
                  "summary": "1. Be slow What would it look like to live your life at half-speed?",
                  "title": "10 ways to refresh your spirit every day",
                },
                Object {
                  "__typename": "SearchResult",
                  "coverImage": Object {
                    "__typename": "ImageMedia",
                    "name": null,
                    "sources": Array [
                      Object {
                        "__typename": "ImageMediaSource",
                        "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f",
                      },
                    ],
                  },
                  "cursor": "9456eef87e314dcf19f013384a29fd22",
                  "node": Object {
                    "__typename": "DevotionalContentItem",
                    "id": "DevotionalContentItem:4dd74ceca9e09b5276e93cbf53821bd6",
                  },
                  "summary": "We all like to know that our boss or the authority over us is pleased, and it means even more when they take the time to share that in front of other people.",
                  "title": "Why leadership isn’t all about the title",
                },
              ]
            }
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            hasContent={6}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={0.7}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onPressItem={[Function]}
            onRefresh={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            refreshControl={
              <RefreshControlMock
                onRefresh={[Function]}
                refreshing={false}
              />
            }
            refreshing={false}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <RCTRefreshControl />
            <View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    cardColor="#00676D"
                    style={
                      Object {
                        "backgroundColor": "#00676D",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          animate={null}
                          customAnimate={null}
                          onReady={false}
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#A5A5A5",
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        >
                          <Image
                            maxAspectRatio={1.2}
                            minAspectRatio={0.75}
                            onLoad={[Function]}
                            source={
                              Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "cache": "force-cache",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f",
                                },
                              ]
                            }
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "opacity": 0,
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          />
                        </View>
                        <BVLinearGradient
                          colors={
                            Array [
                              1711276032,
                              2147483648,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-bottom"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "bottom": 0,
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                            "position": "absolute",
                            "width": "100%",
                          }
                        }
                      >
                        <Text
                          numberOfLines={3}
                          style={
                            Object {
                              "color": "#F8F7F4",
                              "fontFamily": "InterUI-Black",
                              "fontSize": 24,
                              "lineHeight": 27.6,
                            }
                          }
                        >
                          How to lead people to Jesus
                        </Text>
                        <View
                          hasSummary={true}
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "paddingTop": 16,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                                "marginRight": 16,
                              }
                            }
                          >
                            <Text
                              bold={false}
                              italic={false}
                              numberOfLines={2}
                              style={
                                Object {
                                  "color": "#F8F7F4",
                                  "fontFamily": "InterUI-Regular",
                                  "fontSize": 16,
                                  "lineHeight": 26,
                                }
                              }
                            >
                              Love compels a mother to lose all dignity in public as she screams the name of her lost child.
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <Image
                          maxAspectRatio={1.78}
                          minAspectRatio={1.2}
                          onLoad={[Function]}
                          source={Array []}
                          style={
                            Object {
                              "backgroundColor": "#A5A5A5",
                              "opacity": 1,
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        />
                        <BVLinearGradient
                          colors={
                            Array [
                              2147483648,
                              0,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-top"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                          }
                        }
                      >
                        <Text
                          numberOfLines={2}
                          style={
                            Object {
                              "color": "#303030",
                              "fontFamily": "InterUI-Black",
                              "fontSize": 24,
                              "lineHeight": 27.6,
                            }
                          }
                        >
                          Live for Freedom Toolkit
                        </Text>
                        <Text
                          bold={false}
                          italic={false}
                          numberOfLines={2}
                          style={
                            Object {
                              "color": "#303030",
                              "fontFamily": "InterUI-Regular",
                              "fontSize": 16,
                              "lineHeight": 26,
                              "paddingTop": 16,
                            }
                          }
                        >
                          Get in the Groove
Celebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          animate={null}
                          customAnimate={null}
                          onReady={false}
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#A5A5A5",
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        >
                          <Image
                            maxAspectRatio={1.78}
                            minAspectRatio={1.2}
                            onLoad={[Function]}
                            source={
                              Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "cache": "force-cache",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Db08e4d69-0acf-40ff-920a-4517de086175",
                                },
                              ]
                            }
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "opacity": 0,
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          />
                        </View>
                        <BVLinearGradient
                          colors={
                            Array [
                              2147483648,
                              0,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-top"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                          }
                        }
                      >
                        <Text
                          numberOfLines={2}
                          style={
                            Object {
                              "color": "#303030",
                              "fontFamily": "InterUI-Black",
                              "fontSize": 24,
                              "lineHeight": 27.6,
                            }
                          }
                        >
                          Should your 20-something live at home?
                        </Text>
                        <Text
                          bold={false}
                          italic={false}
                          numberOfLines={2}
                          style={
                            Object {
                              "color": "#303030",
                              "fontFamily": "InterUI-Regular",
                              "fontSize": 16,
                              "lineHeight": 26,
                              "paddingTop": 16,
                            }
                          }
                        >
                          Daughter: “Mom, can I bring some friends from college over for dinner Sunday?
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          animate={null}
                          customAnimate={null}
                          onReady={false}
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#A5A5A5",
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        >
                          <Image
                            maxAspectRatio={1.78}
                            minAspectRatio={1.2}
                            onLoad={[Function]}
                            source={
                              Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "cache": "force-cache",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346",
                                },
                              ]
                            }
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "opacity": 0,
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          />
                        </View>
                        <BVLinearGradient
                          colors={
                            Array [
                              2147483648,
                              0,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-top"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                          }
                        }
                      >
                        <Text
                          numberOfLines={2}
                          style={
                            Object {
                              "color": "#303030",
                              "fontFamily": "InterUI-Black",
                              "fontSize": 24,
                              "lineHeight": 27.6,
                            }
                          }
                        >
                          Guys Night!
                        </Text>
                        <Text
                          bold={false}
                          italic={false}
                          numberOfLines={2}
                          style={
                            Object {
                              "color": "#303030",
                              "fontFamily": "InterUI-Regular",
                              "fontSize": 16,
                              "lineHeight": 26,
                              "paddingTop": 16,
                            }
                          }
                        >
                          A time to connect with other guys who live nearby.
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <Image
                          maxAspectRatio={1.78}
                          minAspectRatio={1.2}
                          onLoad={[Function]}
                          source={Array []}
                          style={
                            Object {
                              "backgroundColor": "#A5A5A5",
                              "opacity": 1,
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        />
                        <BVLinearGradient
                          colors={
                            Array [
                              2147483648,
                              0,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-top"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                          }
                        }
                      >
                        <Text
                          numberOfLines={2}
                          style={
                            Object {
                              "color": "#303030",
                              "fontFamily": "InterUI-Black",
                              "fontSize": 24,
                              "lineHeight": 27.6,
                            }
                          }
                        >
                          10 ways to refresh your spirit every day
                        </Text>
                        <Text
                          bold={false}
                          italic={false}
                          numberOfLines={2}
                          style={
                            Object {
                              "color": "#303030",
                              "fontFamily": "InterUI-Regular",
                              "fontSize": 16,
                              "lineHeight": 26,
                              "paddingTop": 16,
                            }
                          }
                        >
                          1. Be slow What would it look like to live your life at half-speed?
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    cardColor="#00676D"
                    style={
                      Object {
                        "backgroundColor": "#00676D",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          animate={null}
                          customAnimate={null}
                          onReady={false}
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#A5A5A5",
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        >
                          <Image
                            maxAspectRatio={1.2}
                            minAspectRatio={0.75}
                            onLoad={[Function]}
                            source={
                              Array [
                                Object {
                                  "__typename": "ImageMediaSource",
                                  "cache": "force-cache",
                                  "uri": "https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f",
                                },
                              ]
                            }
                            style={
                              Object {
                                "backgroundColor": "#A5A5A5",
                                "opacity": 0,
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          />
                        </View>
                        <BVLinearGradient
                          colors={
                            Array [
                              1711276032,
                              2147483648,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-bottom"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "bottom": 0,
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                            "position": "absolute",
                            "width": "100%",
                          }
                        }
                      >
                        <Text
                          numberOfLines={3}
                          style={
                            Object {
                              "color": "#F8F7F4",
                              "fontFamily": "InterUI-Black",
                              "fontSize": 24,
                              "lineHeight": 27.6,
                            }
                          }
                        >
                          Why leadership isn’t all about the title
                        </Text>
                        <View
                          hasSummary={true}
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "paddingTop": 16,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                                "marginRight": 16,
                              }
                            }
                          >
                            <Text
                              bold={false}
                              italic={false}
                              numberOfLines={2}
                              style={
                                Object {
                                  "color": "#F8F7F4",
                                  "fontFamily": "InterUI-Regular",
                                  "fontSize": 16,
                                  "lineHeight": 26,
                                }
                              }
                            >
                              We all like to know that our boss or the authority over us is pleased, and it means even more when they take the time to share that in front of other people.
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFF",
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <View
          onLayout={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "backgroundColor": "#FFF",
              "borderBottomColor": "#A7A7AA",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "flexDirection": "row",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "left": 0,
                    "opacity": 1,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <Text
                  accessibilityTraits="header"
                  allowFontScaling={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, .9)",
                      "fontSize": 17,
                      "fontWeight": "600",
                      "marginHorizontal": 16,
                      "textAlign": "center",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`The SearchFeed component should render a loading state 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={false}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    style={
      Object {
        "backgroundColor": "#eee",
        "flex": 1,
        "flexDirection": "column-reverse",
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="auto"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "paddingTop": 64,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          style={
            Object {
              "backgroundColor": "#fff",
              "flex": 1,
            }
          }
        >
          <RCTScrollView
            ListEmptyComponent={[Function]}
            contentContainerStyle={
              Object {
                "flex": 1,
              }
            }
            data={
              Array [
                Object {
                  "channelType": "",
                  "coverImage": Array [],
                  "id": "fakeId0",
                  "isLoading": true,
                  "parentChannel": Object {
                    "id": "",
                    "name": "",
                  },
                  "title": "",
                },
                Object {
                  "channelType": "",
                  "coverImage": Array [],
                  "id": "fakeId1",
                  "isLoading": true,
                  "parentChannel": Object {
                    "id": "",
                    "name": "",
                  },
                  "title": "",
                },
                Object {
                  "channelType": "",
                  "coverImage": Array [],
                  "id": "fakeId2",
                  "isLoading": true,
                  "parentChannel": Object {
                    "id": "",
                    "name": "",
                  },
                  "title": "",
                },
                Object {
                  "channelType": "",
                  "coverImage": Array [],
                  "id": "fakeId3",
                  "isLoading": true,
                  "parentChannel": Object {
                    "id": "",
                    "name": "",
                  },
                  "title": "",
                },
                Object {
                  "channelType": "",
                  "coverImage": Array [],
                  "id": "fakeId4",
                  "isLoading": true,
                  "parentChannel": Object {
                    "id": "",
                    "name": "",
                  },
                  "title": "",
                },
                Object {
                  "channelType": "",
                  "coverImage": Array [],
                  "id": "fakeId5",
                  "isLoading": true,
                  "parentChannel": Object {
                    "id": "",
                    "name": "",
                  },
                  "title": "",
                },
                Object {
                  "channelType": "",
                  "coverImage": Array [],
                  "id": "fakeId6",
                  "isLoading": true,
                  "parentChannel": Object {
                    "id": "",
                    "name": "",
                  },
                  "title": "",
                },
                Object {
                  "channelType": "",
                  "coverImage": Array [],
                  "id": "fakeId7",
                  "isLoading": true,
                  "parentChannel": Object {
                    "id": "",
                    "name": "",
                  },
                  "title": "",
                },
                Object {
                  "channelType": "",
                  "coverImage": Array [],
                  "id": "fakeId8",
                  "isLoading": true,
                  "parentChannel": Object {
                    "id": "",
                    "name": "",
                  },
                  "title": "",
                },
                Object {
                  "channelType": "",
                  "coverImage": Array [],
                  "id": "fakeId9",
                  "isLoading": true,
                  "parentChannel": Object {
                    "id": "",
                    "name": "",
                  },
                  "title": "",
                },
              ]
            }
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            hasContent={0}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReached={[Function]}
            onEndReachedThreshold={0.7}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onPressItem={[Function]}
            onRefresh={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            refreshControl={
              <RefreshControlMock
                onRefresh={[Function]}
                refreshing={true}
              />
            }
            refreshing={true}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <RCTRefreshControl />
            <View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    isLoading={true}
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          animate={null}
                          customAnimate={null}
                          onReady={false}
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#A5A5A5",
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        >
                          <Image
                            maxAspectRatio={1.78}
                            minAspectRatio={1.2}
                            onLoad={[Function]}
                            source={Array []}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#A5A5A5",
                                "opacity": 0,
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          />
                        </View>
                        <BVLinearGradient
                          colors={
                            Array [
                              2147483648,
                              0,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-top"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "marginBottom": 16,
                              "marginTop": -32,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "alignSelf": "stretch",
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 32,
                                "paddingHorizontal": 12,
                                "width": 64,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    isLoading={true}
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          animate={null}
                          customAnimate={null}
                          onReady={false}
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#A5A5A5",
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        >
                          <Image
                            maxAspectRatio={1.78}
                            minAspectRatio={1.2}
                            onLoad={[Function]}
                            source={Array []}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#A5A5A5",
                                "opacity": 0,
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          />
                        </View>
                        <BVLinearGradient
                          colors={
                            Array [
                              2147483648,
                              0,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-top"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "marginBottom": 16,
                              "marginTop": -32,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "alignSelf": "stretch",
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 32,
                                "paddingHorizontal": 12,
                                "width": 64,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    isLoading={true}
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          animate={null}
                          customAnimate={null}
                          onReady={false}
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#A5A5A5",
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        >
                          <Image
                            maxAspectRatio={1.78}
                            minAspectRatio={1.2}
                            onLoad={[Function]}
                            source={Array []}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#A5A5A5",
                                "opacity": 0,
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          />
                        </View>
                        <BVLinearGradient
                          colors={
                            Array [
                              2147483648,
                              0,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-top"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "marginBottom": 16,
                              "marginTop": -32,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "alignSelf": "stretch",
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 32,
                                "paddingHorizontal": 12,
                                "width": 64,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    isLoading={true}
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          animate={null}
                          customAnimate={null}
                          onReady={false}
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#A5A5A5",
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        >
                          <Image
                            maxAspectRatio={1.78}
                            minAspectRatio={1.2}
                            onLoad={[Function]}
                            source={Array []}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#A5A5A5",
                                "opacity": 0,
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          />
                        </View>
                        <BVLinearGradient
                          colors={
                            Array [
                              2147483648,
                              0,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-top"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "marginBottom": 16,
                              "marginTop": -32,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "alignSelf": "stretch",
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 32,
                                "paddingHorizontal": 12,
                                "width": 64,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    isLoading={true}
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          animate={null}
                          customAnimate={null}
                          onReady={false}
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#A5A5A5",
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        >
                          <Image
                            maxAspectRatio={1.78}
                            minAspectRatio={1.2}
                            onLoad={[Function]}
                            source={Array []}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#A5A5A5",
                                "opacity": 0,
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          />
                        </View>
                        <BVLinearGradient
                          colors={
                            Array [
                              2147483648,
                              0,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-top"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "marginBottom": 16,
                              "marginTop": -32,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "alignSelf": "stretch",
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 32,
                                "paddingHorizontal": 12,
                                "width": 64,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    isLoading={true}
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          animate={null}
                          customAnimate={null}
                          onReady={false}
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#A5A5A5",
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        >
                          <Image
                            maxAspectRatio={1.78}
                            minAspectRatio={1.2}
                            onLoad={[Function]}
                            source={Array []}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#A5A5A5",
                                "opacity": 0,
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          />
                        </View>
                        <BVLinearGradient
                          colors={
                            Array [
                              2147483648,
                              0,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-top"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "marginBottom": 16,
                              "marginTop": -32,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "alignSelf": "stretch",
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 32,
                                "paddingHorizontal": 12,
                                "width": 64,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    isLoading={true}
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          animate={null}
                          customAnimate={null}
                          onReady={false}
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#A5A5A5",
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        >
                          <Image
                            maxAspectRatio={1.78}
                            minAspectRatio={1.2}
                            onLoad={[Function]}
                            source={Array []}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#A5A5A5",
                                "opacity": 0,
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          />
                        </View>
                        <BVLinearGradient
                          colors={
                            Array [
                              2147483648,
                              0,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-top"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "marginBottom": 16,
                              "marginTop": -32,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "alignSelf": "stretch",
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 32,
                                "paddingHorizontal": 12,
                                "width": 64,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    isLoading={true}
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          animate={null}
                          customAnimate={null}
                          onReady={false}
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#A5A5A5",
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        >
                          <Image
                            maxAspectRatio={1.78}
                            minAspectRatio={1.2}
                            onLoad={[Function]}
                            source={Array []}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#A5A5A5",
                                "opacity": 0,
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          />
                        </View>
                        <BVLinearGradient
                          colors={
                            Array [
                              2147483648,
                              0,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-top"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "marginBottom": 16,
                              "marginTop": -32,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "alignSelf": "stretch",
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 32,
                                "paddingHorizontal": 12,
                                "width": 64,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    isLoading={true}
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          animate={null}
                          customAnimate={null}
                          onReady={false}
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#A5A5A5",
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        >
                          <Image
                            maxAspectRatio={1.78}
                            minAspectRatio={1.2}
                            onLoad={[Function]}
                            source={Array []}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#A5A5A5",
                                "opacity": 0,
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          />
                        </View>
                        <BVLinearGradient
                          colors={
                            Array [
                              2147483648,
                              0,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-top"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "marginBottom": 16,
                              "marginTop": -32,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "alignSelf": "stretch",
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 32,
                                "paddingHorizontal": 12,
                                "width": 64,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  clickable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scale": 1,
                        },
                      ],
                    }
                  }
                >
                  <View
                    isLoading={true}
                    style={
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 16,
                        "marginHorizontal": 16,
                        "marginVertical": 12,
                        "shadowColor": "rgba(165, 165, 165, 0.6)",
                        "shadowOffset": Object {
                          "height": 1,
                          "width": 0,
                        },
                        "shadowOpacity": 1,
                        "shadowRadius": 6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "borderRadius": 16,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#A5A5A5",
                            "overflow": "hidden",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          animate={null}
                          customAnimate={null}
                          onReady={false}
                          style={
                            Object {
                              "aspectRatio": 1,
                              "backgroundColor": "#A5A5A5",
                              "resizeMode": "cover",
                              "width": "100%",
                            }
                          }
                        >
                          <Image
                            maxAspectRatio={1.78}
                            minAspectRatio={1.2}
                            onLoad={[Function]}
                            source={Array []}
                            style={
                              Object {
                                "aspectRatio": 1,
                                "backgroundColor": "#A5A5A5",
                                "opacity": 0,
                                "resizeMode": "cover",
                                "width": "100%",
                              }
                            }
                          />
                        </View>
                        <BVLinearGradient
                          colors={
                            Array [
                              2147483648,
                              0,
                            ]
                          }
                          endPoint={
                            Object {
                              "x": 0,
                              "y": 1,
                            }
                          }
                          locations={
                            Array [
                              0,
                              1,
                            ]
                          }
                          overlayColor="#000000"
                          overlayType="gradient-top"
                          startPoint={
                            Object {
                              "x": 0,
                              "y": 0,
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                      <View
                        style={
                          Object {
                            "alignItems": "flex-start",
                            "paddingBottom": 32,
                            "paddingHorizontal": 24,
                            "paddingVertical": 16,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "marginBottom": 16,
                              "marginTop": -32,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "alignSelf": "stretch",
                                "backgroundColor": "#A5A5A5",
                                "borderRadius": 16,
                                "height": 32,
                                "paddingHorizontal": 12,
                                "width": 64,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFF",
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <View
          onLayout={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "backgroundColor": "#FFF",
              "borderBottomColor": "#A7A7AA",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "flexDirection": "row",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "left": 0,
                    "opacity": 1,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <Text
                  accessibilityTraits="header"
                  allowFontScaling={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, .9)",
                      "fontSize": 17,
                      "fontWeight": "600",
                      "marginHorizontal": 16,
                      "textAlign": "center",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`The SearchFeed component should render an empty state 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    collapsable={false}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    style={
      Object {
        "backgroundColor": "#eee",
        "flex": 1,
        "flexDirection": "column-reverse",
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        pointerEvents="auto"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "paddingTop": 64,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          style={
            Object {
              "backgroundColor": "#fff",
              "flex": 1,
            }
          }
        >
          <RCTScrollView
            ListEmptyComponent={[Function]}
            contentContainerStyle={
              Object {
                "flex": 1,
              }
            }
            data={Array []}
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            hasContent={0}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={0.7}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onPressItem={[Function]}
            onRefresh={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            refreshControl={
              <RefreshControlMock
                onRefresh={[Function]}
                refreshing={false}
              />
            }
            refreshing={false}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <RCTRefreshControl />
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "paddingHorizontal": 16,
                      "paddingVertical": 0,
                    }
                  }
                  vertical={false}
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={32}
                    bbWidth={32}
                    height={32}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "marginRight": 8,
                        },
                        null,
                        Object {
                          "flex": 0,
                          "height": 32,
                          "width": 32,
                        },
                      ]
                    }
                    vbHeight={32}
                    vbWidth={32}
                    width={32}
                  >
                    <RNSVGGroup
                      fill={
                        Array [
                          0,
                          4278190080,
                        ]
                      }
                      fillOpacity={1}
                      fillRule={1}
                      font={Object {}}
                      matrix={
                        Array [
                          1,
                          0,
                          0,
                          1,
                          0,
                          0,
                        ]
                      }
                      opacity={1}
                      originX={0}
                      originY={0}
                      propList={Array []}
                      rotation={0}
                      scaleX={1}
                      scaleY={1}
                      skewX={0}
                      skewY={0}
                      stroke={null}
                      strokeDasharray={null}
                      strokeDashoffset={null}
                      strokeLinecap={0}
                      strokeLinejoin={0}
                      strokeMiterlimit={4}
                      strokeOpacity={1}
                      strokeWidth={1}
                      vectorEffect={0}
                      x={0}
                      y={0}
                    >
                      <RNSVGPath
                        d="M27 14h5c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0zM27 14c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0 14c0 1.112-0.895 2-2 2-1.112 0-2-0.896-2-2.001v-1.494c0-0.291 0.224-0.505 0.5-0.505 0.268 0 0.5 0.226 0.5 0.505v1.505c0 0.547 0.444 0.991 1 0.991 0.552 0 1-0.451 1-0.991v-14.009c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-5.415 6.671-9.825 15-9.995v-1.506c0-0.283 0.224-0.499 0.5-0.499 0.268 0 0.5 0.224 0.5 0.499v1.506c8.329 0.17 15 4.58 15 9.995h-5z"
                        fill={
                          Array [
                            0,
                            4289045925,
                          ]
                        }
                        fillOpacity={1}
                        fillRule={1}
                        matrix={
                          Array [
                            1,
                            0,
                            0,
                            1,
                            0,
                            0,
                          ]
                        }
                        opacity={1}
                        originX={0}
                        originY={0}
                        propList={
                          Array [
                            "fill",
                          ]
                        }
                        rotation={0}
                        scaleX={1}
                        scaleY={1}
                        skewX={0}
                        skewY={0}
                        stroke={null}
                        strokeDasharray={null}
                        strokeDashoffset={null}
                        strokeLinecap={0}
                        strokeLinejoin={0}
                        strokeMiterlimit={4}
                        strokeOpacity={1}
                        strokeWidth={1}
                        vectorEffect={0}
                        x={0}
                        y={0}
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                  <Text
                    padded={true}
                    style={
                      Object {
                        "color": "#A5A5A5",
                        "fontFamily": "InterUI-Bold",
                        "fontSize": 16,
                        "lineHeight": 24,
                        "paddingBottom": 12,
                        "paddingTop": 15.84,
                        "textAlign": "center",
                      }
                    }
                  >
                    Uh Oh!
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "paddingHorizontal": 16,
                      "paddingVertical": 0,
                    }
                  }
                  vertical={false}
                >
                  <Text
                    bold={false}
                    italic={false}
                    style={
                      Object {
                        "color": "#A5A5A5",
                        "fontFamily": "InterUI-Regular",
                        "fontSize": 12,
                        "lineHeight": 18,
                        "textAlign": "center",
                      }
                    }
                  >
                    Looks like we couldn't find anything for 
                    <Text
                      bold={true}
                      italic={false}
                      style={
                        Object {
                          "color": "#A5A5A5",
                          "fontFamily": "InterUI-Bold",
                          "fontSize": 12,
                          "lineHeight": 18,
                          "textAlign": "center",
                        }
                      }
                    >
                      "No results here."
                    </Text>
                     Try searching for something else!
                  </Text>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFF",
            "transform": Array [
              Object {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <View
          onLayout={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "backgroundColor": "#FFF",
              "borderBottomColor": "#A7A7AA",
              "borderBottomWidth": 0.5,
              "height": 64,
              "paddingBottom": 0,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "bottom": 0,
                  "flexDirection": "row",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "left": 0,
                    "opacity": 1,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <Text
                  accessibilityTraits="header"
                  allowFontScaling={false}
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "rgba(0, 0, 0, .9)",
                      "fontSize": 17,
                      "fontWeight": "600",
                      "marginHorizontal": 16,
                      "textAlign": "center",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
