// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Discover tab component Should retrieve the discover feed 1`] = `
<BVLinearGradient
  colors={
    Array [
      4294967295,
      4294506484,
    ]
  }
  endPoint={
    Object {
      "x": 0.5,
      "y": 1,
    }
  }
  locations={null}
  startPoint={
    Object {
      "x": 0.5,
      "y": 0,
    }
  }
  style={
    Object {
      "flex": 1,
      "height": "100%",
    }
  }
>
  <View
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      Object {
        "paddingBottom": 0,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 20,
      }
    }
  >
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "paddingBottom": 8,
            "paddingHorizontal": 16,
            "paddingVertical": 0,
            "shadowColor": "rgba(0, 0, 0, 0.3)",
            "shadowOffset": Object {
              "height": 0.5,
              "width": 0,
            },
            "shadowOpacity": 0.85,
            "shadowRadius": 0,
          }
        }
        vertical={false}
      >
        <View
          disabled={false}
          style={
            Object {
              "overflow": "hidden",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#F8F7F4",
                "borderRadius": 16,
                "flexDirection": "row",
                "flexGrow": 1,
                "overflow": "hidden",
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={16}
              bbWidth={16}
              focusable={false}
              height={16}
              isFocused={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "marginLeft": 16,
                  },
                  Object {
                    "opacity": 1,
                  },
                  Object {
                    "flex": 0,
                    "height": 16,
                    "width": 16,
                  },
                ]
              }
              vbHeight={24}
              vbWidth={24}
              width={16}
            >
              <RNSVGGroup
                fill={
                  Array [
                    0,
                    4278190080,
                  ]
                }
                fillOpacity={1}
                fillRule={1}
                font={Object {}}
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                  ]
                }
                opacity={1}
                originX={0}
                originY={0}
                propList={Array []}
                rotation={0}
                scaleX={1}
                scaleY={1}
                skewX={0}
                skewY={0}
                stroke={null}
                strokeDasharray={null}
                strokeDashoffset={null}
                strokeLinecap={0}
                strokeLinejoin={0}
                strokeMiterlimit={4}
                strokeOpacity={1}
                strokeWidth={1}
                vectorEffect={0}
                x={0}
                y={0}
              >
                <RNSVGPath
                  d="M20.77 18.56l-3.42-3.42c.82-1.24 1.3-2.72 1.3-4.3 0-4.33-3.5-7.84-7.82-7.84S3 6.5 3 10.83c0 4.3 3.5 7.82 7.83 7.82 1.6 0 3.07-.48 4.3-1.3l3.43 3.42c.3.3.8.3 1.1 0l1.1-1.1c.32-.3.32-.8 0-1.1zm-16.2-7.73c0-3.46 2.8-6.26 6.26-6.26 3.45 0 6.26 2.8 6.26 6.26 0 3.45-2.83 6.26-6.28 6.26-3.46 0-6.26-2.83-6.26-6.28z"
                  fill={
                    Array [
                      0,
                      4289045925,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={1}
                  vectorEffect={0}
                  x={0}
                  y={0}
                />
              </RNSVGGroup>
            </RNSVGSvgView>
            <TextInput
              allowFontScaling={true}
              cancelButtonOffset={1000}
              editable={true}
              isFocused={false}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="Search"
              placeholderTextColor="#A5A5A5"
              rejectResponderTermination={true}
              returnKeyType="search"
              selectionColor="#17B582"
              style={
                Object {
                  "color": "#303030",
                  "flexGrow": 1,
                  "fontFamily": "System",
                  "fontSize": 14,
                  "height": 40,
                  "paddingLeft": 8,
                  "paddingRight": 0,
                  "paddingTop": 1,
                  "paddingVertical": 0,
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "height": "100%",
                "position": "absolute",
                "right": 0,
                "transform": Array [
                  Object {
                    "translateX": 1000,
                  },
                ],
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "flexDirection": "row",
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#F8F7F4",
                    "borderBottomRightRadius": 16,
                    "borderColor": "#F8F7F4",
                    "borderRightWidth": 1,
                    "borderTopRightRadius": 16,
                    "overflow": "hidden",
                  }
                }
              >
                <View
                  accessible={true}
                  clickable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    borderRadius={28}
                    iconPadding={12}
                    style={
                      Object {
                        "opacity": 0,
                        "padding": 12,
                      }
                    }
                  >
                    <RNSVGSvgView
                      align="xMidYMid"
                      bbHeight={16}
                      bbWidth={16}
                      focusable={false}
                      height={16}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          undefined,
                          Object {
                            "opacity": 1,
                          },
                          Object {
                            "flex": 0,
                            "height": 16,
                            "width": 16,
                          },
                        ]
                      }
                      vbHeight={24}
                      vbWidth={24}
                      width={16}
                    >
                      <RNSVGGroup
                        fill={
                          Array [
                            0,
                            4278190080,
                          ]
                        }
                        fillOpacity={1}
                        fillRule={1}
                        font={Object {}}
                        matrix={
                          Array [
                            1,
                            0,
                            0,
                            1,
                            0,
                            0,
                          ]
                        }
                        opacity={1}
                        originX={0}
                        originY={0}
                        propList={Array []}
                        rotation={0}
                        scaleX={1}
                        scaleY={1}
                        skewX={0}
                        skewY={0}
                        stroke={null}
                        strokeDasharray={null}
                        strokeDashoffset={null}
                        strokeLinecap={0}
                        strokeLinejoin={0}
                        strokeMiterlimit={4}
                        strokeOpacity={1}
                        strokeWidth={1}
                        vectorEffect={0}
                        x={0}
                        y={0}
                      >
                        <RNSVGPath
                          d="M13.07 12l7.2-7.2.5-.5c.3-.3.3-.78 0-1.08-.3-.3-.76-.3-1.06 0l-.5.5-7.2 7.2-7.2-7.2-.5-.5c-.3-.3-.77-.3-1.07 0-.3.3-.3.77 0 1.07l.5.5 7.2 7.2-7.7 7.7c-.3.3-.3.77 0 1.07.3.3.77.3 1.07 0l7.7-7.7 7.7 7.7c.3.3.78.3 1.08 0 .3-.3.3-.77 0-1.07l-7.7-7.7z"
                          fill={
                            Array [
                              0,
                              4289045925,
                            ]
                          }
                          fillOpacity={1}
                          fillRule={1}
                          matrix={
                            Array [
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                            ]
                          }
                          opacity={1}
                          originX={0}
                          originY={0}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                          rotation={0}
                          scaleX={1}
                          scaleY={1}
                          skewX={0}
                          skewY={0}
                          stroke={null}
                          strokeDasharray={null}
                          strokeDashoffset={null}
                          strokeLinecap={0}
                          strokeLinejoin={0}
                          strokeMiterlimit={4}
                          strokeOpacity={1}
                          strokeWidth={1}
                          vectorEffect={0}
                          x={0}
                          y={0}
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
              </View>
              <Text
                onLayout={[Function]}
                onPress={[Function]}
                style={
                  Object {
                    "color": "#17B582",
                    "fontFamily": "System",
                    "fontSize": 14,
                    "fontStyle": null,
                    "fontWeight": null,
                    "lineHeight": 21,
                    "paddingLeft": 16,
                  }
                }
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RCTScrollView
      ListEmptyComponent={
        <Err
          error={
            [Error: Network error: No more mocked responses for the query: query getFeatureFeed($featureFeedId: ID!) {
  node(id: $featureFeedId) {
    id
    ... on FeatureFeed {
      features {
        ...FeedFeaturesFragment
        __typename
      }
      __typename
    }
    __typename
  }
}

fragment FeedFeaturesFragment on Feature {
  id
  __typename
  ... on VerticalCardListFeature {
    isFeatured
    title
    subtitle
    __typename
  }
  ... on HorizontalCardListFeature {
    title
    subtitle
    __typename
  }
  ... on ActionListFeature {
    title
    subtitle
    __typename
  }
  ... on HeroListFeature {
    title
    subtitle
    __typename
  }
  ... on PrayerListFeature {
    title
    subtitle
    isCard
    __typename
  }
  ...TextFeatureFragment
  ...ScriptureFeatureFragment
  ...WebviewFeatureFragment
}

fragment TextFeatureFragment on TextFeature {
  body
  id
  sharing {
    message
    __typename
  }
  __typename
}

fragment ScriptureFeatureFragment on ScriptureFeature {
  sharing {
    message
    __typename
  }
  scriptures {
    id
    html
    reference
    copyright
    version
    __typename
  }
  __typename
}

fragment WebviewFeatureFragment on WebviewFeature {
  linkText
  title
  url
  __typename
}
, variables: {"featureFeedId":"FeatureFeed:c7035fd9677aa209cd4613df53e9c83a0fb3b9ecd853808383d135407161a17bc75b8c451176e861b2ade040817c1b9da6fbfe9c93b76645950e3ce952ba659e"}]
          }
          message="Oh no! We're sorry! We logged your error and notified our team directly. In the mean time, please try again."
          showErrorMessage={false}
        />
      }
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      loading={false}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={0.7}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      openUrl={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 16,
              "marginHorizontal": 16,
              "marginVertical": 12,
              "shadowColor": "rgba(0, 0, 0, 0.09999999999999998)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 8,
            }
          }
        >
          <View
            style={
              Object {
                "borderRadius": 16,
                "overflow": "hidden",
              }
            }
          >
            <View
              style={
                Object {
                  "paddingHorizontal": 16,
                  "paddingVertical": 16,
                }
              }
            >
              <View
                flexed={false}
                style={
                  Object {
                    "alignItems": "center",
                    "flex": null,
                    "flexDirection": "row",
                    "tintColor": "#6EC5B8",
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={19.2}
                  bbWidth={19.2}
                  focusable={false}
                  height={19.2}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      undefined,
                      Object {
                        "opacity": 1,
                      },
                      Object {
                        "flex": 0,
                        "height": 19,
                        "width": 19,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={19.2}
                >
                  <RNSVGGroup
                    fill={
                      Array [
                        0,
                        4278190080,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    font={Object {}}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={Array []}
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth={1}
                    vectorEffect={0}
                    x={0}
                    y={0}
                  >
                    <RNSVGPath
                      d="M21.8955 19.741l-9.091-16.3178c-.3145-.5643-1.2945-.5643-1.609 0L2.1045 19.741c-.148.2662-.138.5865.0255.8433.1655.2585.46.4157.779.4157h18.182c.319 0 .6136-.1572.778-.4148.1647-.2577.1747-.578.0265-.8442zM12 18.4235c-.5018 0-.909-.3847-.909-.8588 0-.474.4072-.8588.909-.8588.502 0 .909.3845.909.8586 0 .474-.407.8588-.909.8588zm.909-3.4353h-1.818V8.9764h1.818v6.0118z"
                      fill={
                        Array [
                          0,
                          4289045925,
                        ]
                      }
                      fillOpacity={1}
                      fillRule={1}
                      matrix={
                        Array [
                          1,
                          0,
                          0,
                          1,
                          0,
                          0,
                        ]
                      }
                      opacity={1}
                      originX={0}
                      originY={0}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                      rotation={0}
                      scaleX={1}
                      scaleY={1}
                      skewX={0}
                      skewY={0}
                      stroke={null}
                      strokeDasharray={null}
                      strokeDashoffset={null}
                      strokeLinecap={0}
                      strokeLinejoin={0}
                      strokeMiterlimit={4}
                      strokeOpacity={1}
                      strokeWidth={1}
                      vectorEffect={0}
                      x={0}
                      y={0}
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
                <View
                  style={
                    Object {
                      "paddingHorizontal": 4,
                    }
                  }
                  withIcon="warning"
                >
                  <Text
                    style={
                      Object {
                        "color": "#A5A5A5",
                        "fontFamily": "InterUI-Bold",
                        "fontSize": 12,
                        "lineHeight": 18,
                      }
                    }
                    tint="#A5A5A5"
                  >
                    Something went wrong
                  </Text>
                </View>
              </View>
              <Text
                style={
                  Object {
                    "color": "#505050",
                    "fontFamily": "InterUI-Bold",
                    "fontSize": 12,
                    "lineHeight": 18,
                  }
                }
              />
              <Text
                bold={false}
                italic={false}
                style={
                  Object {
                    "color": "#303030",
                    "fontFamily": "InterUI-Regular",
                    "fontSize": 16,
                    "lineHeight": 26,
                  }
                }
              >
                Oh no! We're sorry! We logged your error and notified our team directly. In the mean time, please try again.
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</BVLinearGradient>
`;
