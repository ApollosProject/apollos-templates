# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
#update_fastlane

before_all do
  ensure_git_branch
  ensure_git_status_clean
  git_pull
end

platform :ios do

  desc "Push a new beta build to TestFlight"
  lane :deploy do

    # get project name
    proj = Dir.glob("../ios/*.xcworkspace")[0][7..-13]

    app_store_connect_api_key(key_filepath: "ios/apollos.p8")
    setup_ci
    match(type: 'appstore', readonly: true)
    increment_build_number(build_number: number_of_commits, xcodeproj: "ios/" << proj << ".xcodeproj")
    build_app(workspace: "ios/" << proj << ".xcworkspace", scheme: proj)
    changelog_from_git_commits
    testflight
  end
end

platform :android do

  desc "Bumps Android versionCode"
  lane :bump_version_code do
    path = '../android/app/build.gradle'
    re = /versionCode\s+(\d+)/

    s = File.read("../android/app/build.gradle")
    versionCode = number_of_commits
    s[re, 1] = (versionCode).to_s

    f = File.new(path, 'w')
    f.write(s)
    f.close
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    bump_version_code
    gradle(task: 'clean', project_dir: 'android')
    gradle(task: 'bundle', build_type: 'Release', project_dir: 'android')
    changelog_from_git_commits

    path = '../android/app/build.gradle'
    re = /applicationId\s+"([\w+\.]*)"/
    s = File.read("../android/app/build.gradle")
    package_name = s[re, 1]

    upload_to_play_store(
      track: "internal",
      skip_upload_apk: true,
      json_key: "android/key.json",
      package_name: package_name
    )
  end
end
